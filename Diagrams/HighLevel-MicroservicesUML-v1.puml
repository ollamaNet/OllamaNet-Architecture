@startuml
!theme plain
skinparam componentStyle uml2

package "API Gateway" {
    [API Gateway] as gateway
}

package "Authentication Service" {
    [Auth Service] as auth
    [JWT Service] as jwt
    [User Management] as user
}

package "Chat Services" {
    [Chat Service] as chat
    [Conversation Service] as conv
    [Message Service] as msg
}

package "Explore Service" {
    [Explore Service] as explore
    [Discovery Service] as disc
}

package "Admin Services" {
    [Admin Service] as admin
    [Audit Service] as audit
    [Background Tasks] as bgtasks
}

package "LLM Inference Service" {
    [Inference Engine] as llm
    [Model Management] as modelmgmt
}

package "Infrastructure" {
    [Service Registry] as registry
    [Config Server] as config
    [Message Queue] as mq
    [Distributed Cache] as cache
    [Monitoring] as monitor
}

package "Databases" {
    [Auth DB] as authdb
    [Chat DB] as chatdb
    [Explore DB] as exploredb
    [Admin DB] as admindb
}

' External Systems
[External APIs] as external

' Direct API Calls (Synchronous)
User -> gateway
gateway --> auth : sync
gateway --> chat : sync
gateway --> explore : sync
gateway --> admin : sync
chat --> llm : sync
explore --> llm : sync

' Message Queue Connections (Asynchronous)
mq --> admin : async
mq --> bgtasks : async
mq --> audit : async
admin --> modelmgmt : async
modelmgmt --> llm : async

' Database Connections
auth --> authdb
chat --> chatdb
explore --> exploredb
admin --> admindb

' Service Components
auth --> jwt
chat --> conv
conv --> msg
explore --> disc

' Service Discovery
registry --> gateway
registry --> auth
registry --> chat
registry --> explore
registry --> admin
registry --> llm

' Monitoring
monitor --> gateway
monitor --> auth
monitor --> chat
monitor --> explore
monitor --> admin
monitor --> llm

' Cache Connections
cache --> chat
cache --> explore
cache --> auth

@enduml