@startuml OllamaNet_Data_Flow
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Dynamic.puml

title OllamaNet Data Flow Diagram

Person(user, "End User", "User of the OllamaNet platform")

Container(frontend, "Frontend Application", "Web UI", "User interface for interacting with the platform")
Container(gateway, "Gateway Service", "Ocelot", "Routes requests to appropriate services")
Container(auth, "Auth Service", "ASP.NET Core", "Handles authentication and authorization")
Container(conversation, "Conversation Service", "ASP.NET Core", "Manages conversations and chat")
Container(explore, "Explore Service", "ASP.NET Core", "Enables model discovery")
Container(admin, "Admin Service", "ASP.NET Core", "Provides administrative capabilities")
Container(inference_engine, "inference_engine API", "External Service", "LLM inference engine")
ContainerDb(sql_db, "SQL Server", "Database", "Persistent storage")
ContainerDb(redis, "Redis Cache", "Cache", "Distributed caching")
ContainerDb(vector_db, "Vector Database", "Pinecone", "Vector storage for semantic search")

' Authentication Flow
Rel_D(user, frontend, "1. Logs in with credentials")
Rel_R(frontend, gateway, "2. Sends authentication request")
Rel_R(gateway, auth, "3. Forwards authentication request")
Rel_D(auth, sql_db, "4. Validates credentials")
Rel_U(auth, gateway, "5. Returns JWT token")
Rel_L(gateway, frontend, "6. Returns JWT token")

' Conversation Flow
Rel_D(user, frontend, "7. Sends message")
Rel_R(frontend, gateway, "8. Forwards message with JWT")
Rel_R(gateway, conversation, "9. Routes to conversation service")
Rel_D(conversation, sql_db, "10. Stores message")
Rel_R(conversation, vector_db, "11. Retrieves relevant context")
Rel_R(conversation, inference_engine, "12. Requests AI completion")
Rel_L(inference_engine, conversation, "13. Returns AI response")
Rel_U(conversation, gateway, "14. Streams response")
Rel_L(gateway, frontend, "15. Streams to user interface")
Rel_D(conversation, redis, "16. Caches conversation data")

' Model Exploration Flow
Rel_D(user, frontend, "17. Browses models")
Rel_R(frontend, gateway, "18. Requests model list")
Rel_R(gateway, explore, "19. Routes to explore service")
Rel_D(explore, redis, "20. Checks cache")
Rel_D(explore, sql_db, "21. Retrieves model data if not cached")
Rel_U(explore, gateway, "22. Returns model list")
Rel_L(gateway, frontend, "23. Displays models")

' Administration Flow
Rel_D(user, frontend, "24. Performs admin action")
Rel_R(frontend, gateway, "25. Sends admin request")
Rel_R(gateway, admin, "26. Routes to admin service")
Rel_D(admin, sql_db, "27. Performs database operation")
Rel_R(admin, inference_engine, "28. Manages models if needed")
Rel_D(admin, redis, "29. Invalidates cache")
Rel_U(admin, gateway, "30. Returns operation result")
Rel_L(gateway, frontend, "31. Updates UI")

@enduml 